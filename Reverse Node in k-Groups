/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head==NULL || k==1){
            return head;
        }
        ListNode * dummy = new ListNode(0);
        dummy->next=head;
        ListNode *prev=dummy;
        
        ListNode * curr=head;
        int cnt=0;
        stack<ListNode *> st;
        while(curr!=NULL){
            cnt++;
            st.push(curr);
            curr=curr->next;

            if(cnt==k){
                ListNode * temp=prev->next;

                while(!st.empty()){
                    prev->next=st.top();
                    st.pop();
                    prev=prev->next;
                }
                prev->next=curr;
                temp=prev;
                cnt=0;
            }
        }
        return dummy->next;
    }
};
