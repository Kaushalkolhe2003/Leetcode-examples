/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int get_height(TreeNode *&root){
        if(root==NULL){
            return 0;
        }
        int h1=get_height(root->left);
        int h2=get_height(root->right);
        
        int h3=max(h1,h2) +1;
        return h3;
    }
    bool isBalanced(TreeNode* root) {
        if(root==NULL){
            return true;
        }
        bool left1=isBalanced(root->left);
        bool right1=isBalanced(root->right);
        
        bool diff=abs(get_height(root->left) - get_height(root->right)) <=1;
        if(diff && left1 && right1){
            return true;
        }
        else{
            return false;
        }
    }
};
